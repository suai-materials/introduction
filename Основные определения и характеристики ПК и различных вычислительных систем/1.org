* Основные определения и характеристики ПК и различных вычислю систем.

**Быстродействие ПК** - возможность ПК обрабатывать большие объемы инфо.
2 основные структуры - процессор, ОП, скорость доступа между ними

**Производительность процессора** - кол-во элементарных операций за секунду

**Тактовая частота** - или "частота синхронизаций" - число тактов процессора в секунду.
**Такт** - промежуток времени, за который выполняется простейшая микрооперация

**Тактовая частота** - числоа выробатываемых за секунду импульсов, которые синхронизируют
работу узлов компьютера

Генератор тактовых частот - ZQ. Кварцевый резонатор - основной генератор тактовой частоты

**Разрядность** - кол-во "разрядов" или макс длина, которые процессор может обработать целиком.

**Время доступа** - определяется быстродействием ОП. Минимально затрачиваемое время,
которое необходимо для считывания мин порции инфо из ячеек памяти. А также процесс записи

**Объем памяти** - макс объм инфо, который может храниться в памяти

**Плотность записи** - объем инфо на единице длины дорожки (в битах на милиметр)

**Скорость обмена инфо** - скорость записи или чтения на физический носитель. Если говорить
о движущихся накопителях, то определяется скоростью перемещения накопителя.

** Классификация вычислительных систем

SISD - один поток команд, один поток данных
MISD - много команд, один поток данных
 *спорный тип
 (к ним относят системы конвеерной обработки данных)
SIMD - один поток команд, множественный поток данных(для спец систем)
MIMD - множественный поток команд, множественный поток данных
 *параллельные, многопроцессорные вычислительные системы

[[./sheme.jpg][Схема MIMD]]

MIMD делится на:
мультипроцессоры - системы с общей разделяемой памятью
мультикомпютеры - системы с распределяемой памятью

*** Мультипроцессоры
[[./sheme2.jpg]]

а) Использование единой, т.е. централизованной общей памяти (UMA - uniform memory access)
 Основной проблемой является организация параллельных вычислений, т.е. одновременный
 доступ процессоров к общей памяти, и => к памяти. Возникает проблема когерентности(однозначности)
 Однозначность должна соблюдаться в кэшах (Cache coherent problem)
 Если при наличии копий общих данных один из процессоров выполнит
 изменение значений разделяемых переменных,
 то значение копий оказывается разным, а их использование приведет к некорректности значений
 Проблема решается на аппаратном уровне: если общая переменная изменилась, то все ее копии в
 остальных кэшах считаются устаревшими; когда нам надо обратиться к переменной повторно,
 то надо обратиться к ОП
 
б)

