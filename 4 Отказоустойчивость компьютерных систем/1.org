* Отказоустойчевость компьютерных систем

Наработка на отказ - время в течение которого, наш элемент или система 
будет работать без поломок, без отказов

HDD - срок действие механики

Существует несколько варинтов повышение надежности:

1. Аппаратурный -> присутствует аппаратурная ибыточность(много дублирующего оборудования):
   - Все операции паралельны на всех одинаковых компонентах -> все операции сравниваются между собой,
     что позволяет выявить ошибки
   - В случае возникновения ошибок/неисправностей "партнер" выполняет все необходимые действия до того
     момента, пока не будет заменен неисправный компонент

[[   https://mermaid.ink/img/pako:eNpdkEFqAjEUQK8S_loX6m4WLkRPYFcaF8F864CTDDGzEBGsxZWFgiewN5hFpaXt9Aw_N_Ib0RYXIe_By4efJYytRkjg0al8Kh660gghesajG9I-bOmX3qkKOzoKhpKqi4xEvd4Wjb84evPOW9EbkTtDeqPP8BQ2dKQfKgV98ewqbMKa7-_wOopx8xJHbv3jTmQ68OOP8Mz9Cw8qz0caqEGGLlOp5j2W51yCn2KGEhJGjRNVzLwEaVacFrlWHns69dZBMlGzOdZAFd72F2YMiXcFXqNuqvhbsluVKzOw9uqrE88wfyQ]]

   Троированная мажоритарная система контроля -> Чем больше одинаковых - то и верно
   Если все ответы разные -> то нет верного ответа --> ERROR

   Используется в системах, где требуется высокая отказоустойчивость
   Недостаток: высокая стоимость

2. Программный
   - Одновременная работа нескольких машин
   - Дублирование данных и процессов
   - Процедуры автоматического восстановления, касающихся ОС данных и приложений

На данный момент многие системы Апп. и Прог. повышения надежности сравнимы между собой

Надежность системы рассматривается с точки зрения 2-х критериев:
 - Доступность системы
 - Целостность данных

   
**Управляемость системы** включает:
 - Замена неисправных частей незаметно для системы в целом
 - Непрерывное функционирование системы в 3-х основных случаях:
   1) Сбой системы(отказ)
   2) Изменение конфигурации
   3) Расширение системы
 - Эффективное управление массивами данных с большими объемами   
 - Эффективная обработка очередей и распределения нагрузки   
 - Созранение и архивация данных в режиме онлайн
 - Мониторинг работы системы
 - Как можно более раннее обнаружение и локализация ошибок
   (например, smart)

** Способы повышения надежности

1. **Raid massive** - избыточный массив недорогих дисков
   Предназначен для защиты данных при выходе из строя магнитных дисков
2. Отказы других физ. компонентов можно корректировать другими способами:
   - **Дублирование**
   - Установка доп. оборудования поддержки
   Сюда же относятся бесперебойные источники питания, а также стабилизаторы
   (ИБП UPS), (аккумуляторные или дизель-генераторные установки)
3. **Кластеризация** - используется несколько компьютеров, которые обычно соединяются
   в сеть при этом имеющие общие ресурсы(к примеру, дисковое пространство)
   Имеет единую файловую систему, а для пользователя выглядит не как распределенная,
   а как единая система. Это достигается при помощи спец ПО(оно координируте
   передачу всей инфо, а также ее обработку)
   Отдельный компьютер кластера - **узел**
   Если один из узлов выходит из строя, то его нагрузку берет на себя другой узел
   кластера, или распределяется между остальными
   При замене отказавшего элемента кластеры автоматически перераспределят нагрузку

   ПО кластера:
   1) Программа обеспечивающая непротиворечивость доступа приложения
   2) Утилиты мониторинга и конфигурирования кластера
   3) Утилиты конфигурирования ФС и программы управления дисковым пространством

   Св-ва кластеров:
   1) **Открытость** (в некотрых случаях софт под кластера расчитан под определенные
      задачи. Т.е. подержка одной аппаратной платформы)
   2) **Масштабируемость** - в основном подразумевается добавление кластера с
      расширением ресусров
      В случае сбоя в системе кластера, кластеры действуют по схожему алгоритму:
      1) Определяет отказ
      2) Формирование нового кластера
      3) Запуск сценариев
      4) Тестирование ФС
      5) Запуск БД, встроенной в кластер
      6) Восстановление БД (если нужно)
      7) Перезапуск приложения

      В случае серьезного отказа (отказал один из узлов) (при этом некоторые приложения
      могут оказаться недоступны, в течение времени необходимого для переключения на
      другой узел)
      
   3) **Управляемость**.

      Запись и архивация в бд происходят в режиме реального времени
      RTS - real time system - в состав RTS вхдят бд, умеющие работать в онлайн режиме
      Запись и архивация происходит в несколько копий сразу
      Поиск и локализация ошибок будет производиться программным методом

   4) **Стоимость**
      Что нужно учитывать:
      - Стоимость доп. оборудования
      - Тестирование самой системы
      - Планирование работы кластера и изменение в его работе
      - Планирование всех возможных событий
      - Подготовка документации на кластер
      - Оплата консультантов
      - Обучение персонала

4. Отказоустойчивые компьютера - одно- или много-процессорные
   сервера с отказоустойчивой аппаратной начинкой (FT-server fault tolerant)
   В задачу таких серверов входит:
   - предотвращение и исключение сбоев, при этом не увеличивая время простоев
   Любая команда выполняется одновременно на всех элементах(в FT-серверах они задублированы)
   В результате все операции логически сравниваются.
   Число задублированных элементов может быть разное. Сами элементы тоже разные
   Отличие:
   Любой задублированный элемент способен продолжать работу в случае отказа
   элемента-партнера
   При это прикладная система этого "не чувствует".
   В случае, если результат выполнения на одном процессоре отличается от рещультата на втором,
   то система может продиагностировать отказ одного из модулей.При этом другой модуль
   продолжает работать в штатном режиме, до тех пор, пока партнер не будет заменен "на горячую"
   - **постоянная доступность**

   Свойства ft-серверов:
   1) **Открытость**. Как правило, ft-серверами управляют юникс системы

   2) **Масштабируемость**. Здесь можно реально вычислить прирост производительности

   3) **Надежность**. Реализуется аппаратным способом. Недоступность системы -
      это всего лишь несколько минут в год

   4) **Стоимость**. Стоят дорого. Конечная стоимость ft-серверов сравнима,
      а иногда меньше стоимости кластеров. При этом фактическая стоимость за аппаратную
      дороже. Отсутствуют скрытые затраты на планирование возможных сбоев.
      ft-сервера зачастую обходятся также, как и кластеры


** Причины сбоев и неполадок КС

1. Поломока компонентов.
   - Нарушение правил эксплуатации
   - Программно-аппаратные сбои
2. Программные.
   - Вирусы
   - Неправильное установка и удаление ПО
   - Отсутствие или повреждение файлов в виду сбоев жестких дисков(ФС)
   - Изменение записей реестра виндовс
   - Несовместимость свежеустановленных программ
   - Несовершенство ПО
   - Несовершенство ОС
   - Конфликты между устройствами
   - Использование старого оборудования
   - Неверные настройки ОС
   - Ограничения ОС

** Вирусы

Типы:
   - Трояны
     Тип вредоносного ПО, который маскируется "правое" ПО и при
     определенных обстоятельтсвах производит несанкционированное вторжение в ОС
     частично или полностью разрушая ее целостность
   - Malware
   - SpyWare
   - Черви. Распрастраняются с переносимыми устройствами. При их помощи черви
     внедряются в ОС, при этом переносные накопители в дальнейшем
     служат как ср-во распространения и активации
     Самая распространенная среда обитания - организации
   - Майнеры
   - KeyLoggers
   - AdWare - распространители рекламы
   - RAT
   - DOS - атаки компьютеров на низком уровне

Для защиты от большинства атак присутствует фаервол(firewall)

Для юникс и виндовс подобных систем кол-во вирусов равнозначно

Еще одним ср-вом борьбы с вирусами являются браузеры

** Проблемы программно-аппартного характера

Большинство неисправностей возникают из драйверов

Проблемы:
   - Несовместимость оборудования и самого драйвера
   - Подключение устаревшего оборудования
   - Несовместимость драйверов и ОС
   - Конфликты подключаемых устройств
   - Аппаратная несовместимость платформ и внешних устройств

Причина - неправильная установка драйверов(Или отсутствие драйвера)
Также проблемы возможны из-за использования opensourse или универсальных драйверов

** Реестр

Реестр - ссылочная система путей и ключей
