* Командный язык Powershell

** Настройка и управление с помощью языка Powershell

Стандартные ЯП ОС:
 - VBS
 - js
 - BASH
 - powershel
 - assembler

** WPS - windows powershell
**WPS** - Язык сценариев и командная оболочка для администрирования и конфигурирования
ОС

В основе лежит платформа NET Framework

Внутренняя среда - CRA

Отличия от командной строки:
 - Командная строка принимает и возращает текст
   WPS работает с объектами
   У каждого объекта есть свои св-ва и методы
 - Стандартная структура: глагол + существительное
 - WPS содержит множество знакомых команд из виндовс
 - В языке WPS у многих команд есть синонимы(alias) Например, Get-Alias
 - Для упрощения поиска команд используется командлет -- Get-Command
   С его помощью можно осуществлять поиск по глаголам и сущ.
   Get-Help Get-Command - "parametr"
 - Get-Help 3 варианта:
   1) Detailed
   2) Full
   3) Examples

Язык WPS появился со времен WS 2008 (Windows 7)

Для того, чтобы узнать версию WPS необходимо выполнить командлет:
$PSVersionTable.PSVersion
Get-Variable -Name PSVersionTable -valueOnly

Структурная единица языка WPS называется командлетом (cmdlet)
**Командлет** - команда, с помощью которой можно осуществлять
взаимодействие с объектами ОСс целью управления ими

Получение полного списка командлетов:
Get-Command -CommandType cmdlet

Для поиска по глаголам :
Get-Command -Verb

По существительным:
Get-Command -Noun

** Конвейеризация

**Конвейер** - передача результата работы командлета другому командлету
через |

При работе конвейеров действия происходят над объектами и передаются тоже объеткы,
т.е. командлет работает с объектом и возращает объекты, передавая их по конвейеру

Пример.

Get-ChildItem -Path "C:\Windows\System32" -File | Sort-Object length -Descending | Select-Object -First 1

** Фоновое выполнение команд

Используется, если текущая команда выполняется длительное время, при этом процесс последующих вычислений не должен
ждать.

В таком случае команда с высокой длительностью отправляется в фон и продолжает выполняться. В это время
продолжают работать другие команды, не дожидаясь окончания 1-ой

Комадлеты:
 1) Start-Job - запуск команды в фоне
 2) Stop-Job - остановить работу фоновой задачи
 3) Get-Job - получаем список работающих фоновых задач, а также задач, которые выполнилимь
 4) Receive-Job - позволяет проконтроливать выполнение фоновой задач.
 5) Remove-Job - удалить задачу
 6) Wait-Job - переводит фоновую задачу на передний для план, чтобы дождться выполнения

Пример.

Start-Job {Get-Service}

При обращении к фоновой задаче обращается

** Удаленное управление с WPS

Три варианта управления удаленным компом:
 - Параметр -ComuterName. Широкое распространение по командам
   При помощи данного параметра происходит передача имени компьютера, на котором непосредственно нужно
   выполнить свою команду.
   При помощи данного параметра можно выполнить команду только на 1 компьютере одновременно
 - Enter-PSSession  --  в данном случае работа на удаленной машине производится также, как
   на локальной. При этом удаленному ПК передаются все введенные команды
   Один комп в сеансе
   Enter-PSSession ServerName
 - Invoke-Command  --  многопользовательский сеанс при помощи которого можно выполнять команды как на 1 ПК
   так и на множество

** Система сценариев, модулей и функций в WPS

Пользовательские подпрограммы

Расширение:
*.PS1

Get-ExecutionPolicy  --  получение состояния политики выполнения сценариев
По умолчанию находится в "Restricted" - блокировка всех сценариев
"AllSigned" - выполнение сценариев с цифровой
"RemoteSigned" - локальные и скаченные сценарии(имеющие подпись)
"Unrestricted" - !!!ОПАСНО!!! Выполняются все возможные сценарии

Для изменений политик:
Set-ExecutionPolicy ...

Чтобы запустить файл PS1 необходимо прописать полный путь к файлу

*.psm1  --  функция(m - модуль), которая сохраняется в файл

Function {...}

Место хранения модулей:
Пользовательская папка, раздел документы, в папке WindowsPowerShell\modules
C:\Program Files\PowerShel\

Имя модуля
Get-ChildItem Env:\PSModulePath | Format-Table -AutoSize

Для выполнения сценариев у MWPS есть интегрированная среда сценариев:
ISE
ISE не существует для CORE,

** Ср-ва RSAT-AD для PS

Управление ср-вами Active Directory через WPS

RSAT - remote server administration tool

Установка RSAT-AD на сервере:
 1) Графический:
    - зайти в диспетчер серверов
    - Управление -> добавить роли и компоненты
    - Окно выбора типа установки -> Установка ролей или компонентов
    - Выбор целевого сервера
    - Выбор компонентов. Пройти по следующему пути:
      "Ср-ва удаленного администрирования сервера ->
      Ср-ва администрирования ролей -> Ср-ва AD DS и AD LDS ->
      Модуль Ative Directory для WPS"
 2) Сценарий:
    Import-Module ServerManager
    Add(Install)-WindowsFeature -Name "RSAT-AD-PowerShell" -IncludeAllSubFeature

Проверка установки:
Get-Commands -Module ActiveDirectory | Measure-Object
(Выведет кол-во командлетов для AD)

Установка на клиентской машине:
 - Заходим в панель управления -> Программы и компоненты
 - Включение и выключение компонентов Виндовс
(Для Pro и Enterprise)

Удаленная установка с домена:
$rc = New-Session -ComputerName DC_or_Comp_with_AdPosh(Имя NetBIOS домена)
Import-Module -PSession $rc -Name ActiveDirectory

В командлетах AD присутствуют 4 основных глагола:
Get, Move, Set, Remove


Использование RSAT-AD:
 - Получение инфо о компах в составе домена
   Get-ADComputer -SearchBase 'OU=Russia,DC=winitpro,DC=ru' -Filter *  -Properties * | FT Name, LastLogonDate -Autosize
   OU - organization unit
 - New-ADUser -Name "Andrey Petrov" -GivenName "Andrey" -Surname "Petrov" -SamAccountName "apetrov"
   -UserPrincipalName "apetrov@winiipro.ru" -Path "OU=Users, OU=Ufa, DC=winitpro, DC=loc" -AccountPassword (Read-Host -AsSecureString
   "Input Password") -Enabled $true
